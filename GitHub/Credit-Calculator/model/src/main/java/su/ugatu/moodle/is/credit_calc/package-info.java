/**
 * Пакет содержит классы, позволяющие вычислять размеры и график платежей по
 * кредиту (аннуитетная и дифференцированная схема), а также вычислить
 * эффективную процентную ставку по кредиту.
 *
 * Сценарий использования:
 *
 * 1. Создайте оффер - экземпляр класса CreditOfferImpl, установив ставку
 *    кредита в долях от единицы, а также, при наличии, размеры комиссий.
 *
 * 2. Создайте заявку на кредит - экземпляр класса CreditApplicationImpl,
 *    указав обязательный параметр - размер платежа - в аргументе конструктора.
 *    Опционально укажите другие параметры заявки, используя "fluent interface".
 *    @see <a href="http://ru.wikipedia.org/wiki/Fluent_interface/">Wiki</a>
 *
 *    Например: new CreditApplicationImpl(creditAmount)
 *                  .setPaymentType(CreditPaymentType.ANNUITY)
 *                  .setDurationInMonths(12);
 *
 * 3. Рассчитайте предложение по кредиту, передав в оффер заявку:
 *    calculateProposal(creditApplication).
 *
 * 4. Используйте данные полученного предложения по кредиту CreditProposal,
 *    например, список платежей CreditPayment.
 *
 *
 * Особенности реализации:
 * 1. Дата следующего платежа рассчитывается прибавлением месяца к предыдущей.
 * Если день месяца предыдущего платежа больше количества дней месяца текущего
 * платежа, то дата платежа устанавливается последним днем месяца и уже к нему
 * прибавляются все последующие месяцы. Например, если платеж назначен на 31
 * октября, то следующий платеж будет 30 ноября.
 *
 * 2. По умолчнаю (при неуказании явно) используется аннуитетная схема,
 * максимальный период по офферу, текущая дата как дата получения кредита.
 *
 */
package su.ugatu.moodle.is.credit_calc;
